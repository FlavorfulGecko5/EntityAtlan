#pragma once
#include <unordered_map>
#include <set>

class EntNode;
class BinaryWriter;
struct reserializer;

typedef void rsfunc_t(const EntNode&, BinaryWriter&);
typedef std::unordered_map<uint64_t, reserializer> rspropmap_t;
typedef std::set<uint64_t> rsenumset_t;

struct reserializer {
	rsfunc_t* callback = nullptr;
	uint64_t farmhash = 0;
	int arrayLength = 0;

	void Exec(const EntNode& property, BinaryWriter& writer) const;
};

struct reserialTypeInfo {
	rsfunc_t* callback = nullptr;
	uint32_t typeinfohash = 0;
};

namespace reserial {

	/* Generated by reflection code */
	extern const std::unordered_map<uint64_t, reserialTypeInfo> typeInfoPtrMap;

	/* Debugging */
	extern thread_local int warningcount;

	/* Entry Points */
	void rs_start_entitydef(const EntNode& root, BinaryWriter& writer);

	/* Pointers */
	rsfunc_t rs_pointerbase;
	rsfunc_t rs_pointerdeclinfo;
	rsfunc_t rs_pointerdecl;

	/* Polymorphic Types */
	rsfunc_t rs_idTypeInfoPtr;
	rsfunc_t rs_idTypeInfoObjectPtr;

	/* Containers */
	void rs_enumbase(const EntNode& property, BinaryWriter& writer, const rsenumset_t& enumset);
	void rs_structbase(const EntNode& property, BinaryWriter& writer, const rspropmap_t& propmap);
	void rs_idList(const EntNode& property, BinaryWriter& writer, rsfunc_t* callback);
	void rs_staticList(const EntNode& property, BinaryWriter& writer, reserializer basetype);
	void rs_idListMap(const EntNode& property, BinaryWriter& writer, rsfunc_t* keyfunc, rsfunc_t* valuefunc);

	/* Manually Implemented Structs */
	rsfunc_t rs_idStr;
	rsfunc_t rs_attachParent_t;
	rsfunc_t rs_idRenderModelWeakHandle;
	rsfunc_t rs_idLogicProperties;
	rsfunc_t rs_idEventArg;

	/* Primitive Types */
	rsfunc_t rs_bool;
	rsfunc_t rs_char;
	rsfunc_t rs_unsigned_char;
	rsfunc_t rs_wchar_t;
	rsfunc_t rs_short;
	rsfunc_t rs_unsigned_short;
	rsfunc_t rs_int;
	rsfunc_t rs_unsigned_int;
	rsfunc_t rs_long;
	rsfunc_t rs_long_long;
	rsfunc_t rs_unsigned_long;
	rsfunc_t rs_unsigned_long_long;
	rsfunc_t rs_float;
	rsfunc_t rs_double;
}